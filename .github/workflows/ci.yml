name: CI

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - master
      - feat/chfo/220307_cmake
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  workflow_dispatch:
  status: {}
jobs:
  # Build and run tests. Note that the valgrind tests crash.
  build-and-test:
    name: Build monocypher and run unit tests
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest] #macos-latest could also be here, but not free for Open Source
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: (ubuntu) apt-get update
        if: (matrix.platform == 'ubuntu-latest')
        run: sudo apt-get update

      - name: (ubuntu) Install libsodium
        if: (matrix.platform == 'ubuntu-latest')
        run: sudo apt-get install -y libsodium-dev

      - name: (ubuntu) Install clang and llvm
        if: (matrix.platform == 'ubuntu-latest')
        run: sudo apt-get install -y clang llvm cmake

      - name: Make test vectors
        run: |
          pushd tests/gen
          make clean && make
          popd

      - name: Run tests
        run: make clean && make test

      - name: Run speed tests
        run: |
          make clean && make speed

      - name: (ubuntu) Run code coverage tests
        if: (matrix.platform == 'ubuntu-latest')
        run: |
          ./tests/coverage.sh

      - name: Run tests with clang sanitizers I
        run: |
          set -e
          make clean;  make test; make test-legacy
          make clean;  make test CFLAGS="-DBLAKE2_NO_UNROLLING -O3"
          make clean;  make test CC="clang -std=c99" CFLAGS="-g -fsanitize=address"
          make clean;  make test CC="clang -std=c99" CFLAGS="-g -fsanitize=undefined"

      - name: (ubuntu) Run tests with clang sanitizers II
        if: (matrix.platform == 'ubuntu-latest')
        run: |
          set -e
          make clean;  make test CC="clang -std=c99" CFLAGS="-g -fsanitize=memory"

      - name: Build with cmake
        run: |
          pushd tests
          mkdir -p build && cd build
          cmake .. 
          make -j8
          ctest -j8
          popd

      - name: (ubuntu) Install valgrind
        if: (matrix.platform == 'ubuntu-latest')
        run: |
          sudo apt-get install -y valgrind

      - name: (ubuntu) Run valgrind
        if: (matrix.platform == 'ubuntu-latest')
        run: |
          set -e
          pushd tests/build
          valgrind ./test-test
          valgrind ./test-legacy
          valgrind ./test-ctgrind
          valgrind ./test-tis-ci
          popd
