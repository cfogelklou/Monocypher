# This file is dual-licensed.  Choose whichever licence you want from
# the two licences listed below.
#
# The first licence is a regular 2-clause BSD licence.  The second licence
# is the CC-0 from Creative Commons. It is intended to release Monocypher
# to the public domain.  The BSD licence serves as a fallback option.
#
# SPDX-License-Identifier: BSD-2-Clause OR CC0-1.0
#
# ------------------------------------------------------------------------
#
# Copyright (c) 2017-2019, Loup Vaillant
# All rights reserved.
#
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the
#    distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# ------------------------------------------------------------------------
#
# Written in 2017-2019 by Loup Vaillant
# Written in 2022 by Chris Fogelklou
#
# To the extent possible under law, the author(s) have dedicated all copyright
# and related neighboring rights to this software to the public domain
# worldwide.  This software is distributed without any warranty.
#
# You should have received a copy of the CC0 Public Domain Dedication along
# with this software.  If not, see
# <https://creativecommons.org/publicdomain/zero/1.0/>
name: CI

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - master
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  workflow_dispatch:
  status: {}
jobs:
  # Build and run tests. Note that the valgrind tests crash.
  build-and-test:
    name: Build monocypher and run unit tests
    strategy:
      matrix:
        platform: [ubuntu-latest] #macos-latest could also be here, but not free for Open Source
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Ubuntu apt-get update
        run: sudo apt-get update

      - name: Install libsodium
        run: sudo apt-get install -y libsodium-dev

      - name: Install clang and llvm
        run: sudo apt-get install -y clang llvm

      - name: Install valgrind
        run: sudo apt-get install -y valgrind

      - name: Make test vectors
        run: |
          pushd tests/gen
          make clean && make
          popd

      - name: Run tests
        run: make clean && make test

      - name: Run speed tests
        run: |
          make clean && make speed

      - name: Run code coverage tests
        run: |
          ./tests/coverage.sh

      - name: Run tests with clang sanitizers and valgrind
        run: |
          set -e

          make clean;  make test; make test-legacy
          make clean;  make test CFLAGS="-DBLAKE2_NO_UNROLLING -O3"
          make clean;  make test CC="clang -std=c99" CFLAGS="-g -fsanitize=address"
          make clean;  make test CC="clang -std=c99" CFLAGS="-g -fsanitize=memory"
          make clean;  make test CC="clang -std=c99" CFLAGS="-g -fsanitize=undefined"
          make clean;  make test CC="clang -std=c99" test.out;  valgrind ./test.out

          echo
          echo "All sanitisers passed!"
          echo
